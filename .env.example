# RustDesk Server Environment Configuration
# Copy this file to .env and customize the values for your setup
# https://github.com/a-ariff/rustdesk-server

# ===================================
# SERVER CONFIGURATION
# ===================================

# Your server's public IP address
# Replace with your actual server IP or domain name
SERVER_IP=your.server.ip.address

# Optional: Custom domain for your RustDesk server
# If you have a domain pointing to your server, set it here
RELAY_DOMAIN=rustdesk.yourdomain.com

# ===================================
# PORT CONFIGURATION
# ===================================

# HBBS (RustDesk Relay Server) - Main relay service port
HBBS_PORT=21115

# HBBS NAT traversal port (both TCP and UDP)
HBBS_PORT_NAT=21116

# HBBR (RustDesk Bridge Server) - WebSocket port
HBBR_PORT=21117

# HBBR alternative port
HBBR_PORT_ALT=21119

# Web console port (optional - for web management interface)
HBBS_WEB_PORT=21118

# Admin panel port (optional - experimental feature)
ADMIN_PORT=21114

# ===================================
# SECURITY CONFIGURATION
# ===================================

# Force encrypted connections only (recommended: Y)
# Set to N only for testing purposes
ENCRYPTED_ONLY=Y

# Path to the encryption key file inside container
# Leave as default unless you have specific requirements
KEY_FILE=/root/key.pem

# Custom encryption key (optional)
# If not set, RustDesk will generate one automatically
# CUSTOM_KEY=your_custom_encryption_key_here

# ===================================
# LOGGING CONFIGURATION
# ===================================

# Log level: trace, debug, info, warn, error
# For production, use 'info' or 'warn'
# For troubleshooting, use 'debug' or 'trace'
RUST_LOG=info

# Enable detailed logging for specific components
# RUST_LOG_HBBS=debug
# RUST_LOG_HBBR=debug

# ===================================
# ADVANCED CONFIGURATION
# ===================================

# Database configuration (if using persistent storage)
# DB_URL=sqlite:///root/db.sqlite3

# Maximum number of connections per client
# MAX_CONNECTIONS=100

# Connection timeout in seconds
# CONNECTION_TIMEOUT=30

# Enable/disable specific features
# ENABLE_AUDIO=Y
# ENABLE_CLIPBOARD=Y
# ENABLE_FILE_TRANSFER=Y

# ===================================
# NETWORK CONFIGURATION
# ===================================

# Custom subnet for Docker network (advanced users only)
# DOCKER_SUBNET=172.20.0.0/16

# External interface binding (usually not needed)
# BIND_INTERFACE=0.0.0.0

# ===================================
# SSL/HTTPS CONFIGURATION (OPTIONAL)
# ===================================

# Enable HTTPS (requires nginx service in docker-compose.yml)
# ENABLE_HTTPS=N

# SSL certificate paths (if using custom certificates)
# SSL_CERT_PATH=/path/to/your/certificate.crt
# SSL_KEY_PATH=/path/to/your/private.key

# Let's Encrypt email for automatic SSL certificate generation
# LETSENCRYPT_EMAIL=your.email@domain.com

# ===================================
# MONITORING & HEALTH CHECKS
# ===================================

# Enable health check endpoints
# ENABLE_HEALTH_CHECK=Y

# Health check interval in seconds
# HEALTH_CHECK_INTERVAL=30

# Enable metrics collection (Prometheus format)
# ENABLE_METRICS=N
# METRICS_PORT=9090

# ===================================
# BACKUP CONFIGURATION
# ===================================

# Backup directory path
# BACKUP_PATH=./backups

# Automatic backup interval in hours (0 = disabled)
# BACKUP_INTERVAL=24

# Number of backup files to keep
# BACKUP_RETENTION=7

# ===================================
# PERFORMANCE TUNING
# ===================================

# Worker thread count (0 = auto-detect based on CPU cores)
# WORKER_THREADS=0

# Maximum memory usage in MB (0 = unlimited)
# MAX_MEMORY=0

# TCP buffer sizes in KB
# TCP_SEND_BUFFER=64
# TCP_RECV_BUFFER=64

# ===================================
# DEVELOPMENT & DEBUGGING
# ===================================

# Enable debug mode (DO NOT USE IN PRODUCTION)
# DEBUG_MODE=N

# Enable verbose logging
# VERBOSE=N

# Enable API access logs
# LOG_API_ACCESS=N

# ===================================
# IMPORTANT NOTES
# ===================================
#
# 1. After modifying this file, restart your containers:
#    docker-compose down && docker-compose up -d
#
# 2. Ensure your firewall allows traffic on the configured ports:
#    - TCP: 21115, 21116, 21117, 21118, 21119
#    - UDP: 21116
#
# 3. For production use:
#    - Change default ports if needed
#    - Set up proper SSL certificates
#    - Configure monitoring and logging
#    - Set up regular backups
#
# 4. Client configuration:
#    - ID Server: your.server.ip.address:21115
#    - Relay Server: your.server.ip.address:21116
#    - Use the key from: docker-compose logs hbbs | grep "Key:"
#
# 5. For support and documentation:
#    - https://rustdesk.com/docs/
#    - https://github.com/rustdesk/rustdesk-server
#    - https://github.com/a-ariff/rustdesk-server
#
# ===================================
